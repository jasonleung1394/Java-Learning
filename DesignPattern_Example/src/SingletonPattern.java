public class SingletonPattern extends DesignPattern_Template {
    SingletonPattern() {
        pattern_name = "Singleton Pattern";
        pattern_description = "Singleton pattern is one of the simplest design patterns in Java. \n" +
                "This type of design pattern comes under creational pattern as this pattern provides \n" +
                "one of the best ways to create an object.";
    }

    String singletonDemoString = "Following are generated by the singleton class";

    public String singletonDemoOutput (){
        Singleton s = Singleton.getInstance();
        return s.attachString();
    }


}

class Singleton extends SingletonPattern {
    //private constructor
    private Singleton() {

    }

    // A static instance for the class
    private static Singleton singleton = new Singleton();

    // A public static method to return the instance
    public static Singleton getInstance() {
        return singleton;
    }

    public String attachString() {
       return singletonDemoString += " \"It me mario! \"";
    }

}
